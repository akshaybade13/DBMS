1.Find the information about two teachers:
db.Teachers.find().limit(2)

2.Find the information about all teachers of the computer department:
db.Teachers.find({ dname: "Computer" })

3.Find the information about all teachers of computer, IT, and E&TC department:
db.Teachers.find({ dname: { $in: ["Computer", "IT", "E&TC"] } })

4.Find the information about all teachers of computer, IT, and E&TC department having salary greater than or equal to 25000/-:
db.Teachers.find({ dname: { $in: ["Computer", "IT", "E&TC"] }, salary: { $gte: 25000 } })


5.Find the student information having roll_no = 25 or Sname=xyz:
db.Students.find({ $or: [{ roll_no: 25 }, { Sname: "xyz" }] })

6.Update the experience of teacher-praveen to 10 years, considering it as a new entry if not available in the database:

db.Teachers.update({ Tname: "praveen" }, { $set: { experience: 10 } }, { upsert: true })

7.Update the department of all the teachers working in IT department to COMP:
db.Teachers.update({ dname: "IT" }, { $set: { dname: "COMP" } }, { multi: true })

8.Find the teachers' name and their experience from the Teachers collection:
db.Teachers.find({}, { Tname: 1, experience: 1, _id: 0 })

9.Using save() method, insert one entry in the department collection:
db.Department.save({ dept_name: "SomeDept" })

10.Delete all the documents from the Teachers collection having IT dept.:
db.Teachers.deleteMany({ dname: "IT" })

11.Display the first 5 documents in the Teachers collection in ascending order using pretty() method:
db.Teachers.find().sort({ _id: 1 }).limit(5).pretty()








