a) Consider table Stud(Roll, Att,Status)
Write a PL/SQL block for following requirement and handle the exceptions. Roll no. of student will be entered by user. Attendance of roll no. entered by user will be checked in Stud table. If attendance is less than 75% then display the message “Term not granted” and set the status in stud table as “D”. Otherwise display message “Term granted” and set the status in stud table as “ND”

Answer

DECLARE
    v_roll_number NUMBER;
    v_attendance NUMBER;
    v_status CHAR(1);
    
    -- User-defined exception for insufficient attendance
    insufficient_attendance EXCEPTION;
    
BEGIN
    -- Prompt the user for Roll Number
    v_roll_number := &Enter_Roll_Number;
    
    -- Retrieve attendance from the Stud table
    SELECT Att, Status
    INTO v_attendance, v_status
    FROM Stud
    WHERE Roll = v_roll_number;
    
    -- Check attendance and update status
    IF v_attendance < 75 THEN
        -- If attendance is less than 75%, set status to 'D'
        v_status := 'D';
        DBMS_OUTPUT.PUT_LINE('Term not granted');
    ELSE
        -- If attendance is 75% or higher, set status to 'ND'
        v_status := 'ND';
        DBMS_OUTPUT.PUT_LINE('Term granted');
    END IF;
    
    -- Update the Stud table with the new status
    UPDATE Stud
    SET Status = v_status
    WHERE Roll = v_roll_number;
    
    -- Commit the changes to the database
    COMMIT;
    
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Roll Number not found in the Stud table.');
    WHEN insufficient_attendance THEN
        DBMS_OUTPUT.PUT_LINE('Insufficient attendance for term.');
        -- Optionally, you can log this exception for further analysis.
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
        ROLLBACK;
END;
/

------------------------------------------------------------------------------------------------------------------------------------------------------------

b) Write a PL/SQL block for following requirement using user defined exception handling. The account_master table records the current balance for an account, which is updated whenever, any deposits or withdrawals takes place. If the withdrawal attempted is more than the current balance held in the account. The user defined exception is raised, displaying an appropriate message. Write a PL/SQL block for above requirement using user defined exception handling.

Answer

DECLARE
    v_account_id NUMBER;
    v_withdrawal_amount NUMBER := &Withdrawal_Amount;
    v_current_balance NUMBER;
    
    -- User-defined exception for insufficient balance
    insufficient_balance EXCEPTION;
    
BEGIN
    -- Prompt the user for the account ID
    v_account_id := &Enter_Account_ID;
    
    -- Retrieve the current balance from the account_master table
    SELECT balance
    INTO v_current_balance
    FROM account_master
    WHERE account_id = v_account_id;
    
    -- Check if the withdrawal amount is greater than the current balance
    IF v_withdrawal_amount > v_current_balance THEN
        RAISE insufficient_balance;
    ELSE
        -- Update the balance after a successful withdrawal
        v_current_balance := v_current_balance - v_withdrawal_amount;
        UPDATE account_master
        SET balance = v_current_balance
        WHERE account_id = v_account_id;
        COMMIT;
        DBMS_OUTPUT.PUT_LINE('Withdrawal successful. New balance: ' || v_current_balance);
    END IF;
    
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Account ID not found.');
    WHEN insufficient_balance THEN
        DBMS_OUTPUT.PUT_LINE('Insufficient balance for withdrawal.');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
        ROLLBACK;
END;
/
